name: Windows

on: 
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw-w64, msvc16]
        bits: [32, 64]
        include:
        - compiler: mingw-w64
          bits: 32
          ARCH: "i686"
          COMPILER_PATH: "C:\\msys64\\mingw32\\bin"
          WINDRES_ARCH: pe-i386
        - compiler: mingw-w64
          bits: 64
          ARCH: "x86_64"
          COMPILER_PATH: "C:\\msys64\\mingw64\\bin"
          WINDRES_ARCH: pe-x86-64
        - compiler: msvc16
          bits: 32
          ARCH: "x86"
          VSARCHPATH: "Win32" 
        - compiler: msvc16
          bits: 64
          ARCH: "x64" 
          VSARCHPATH: "x64"

    env:
      ZIP_NAME:
      RELEASE_NAME: Bat_Cat_Studios-Wasabi_Warriors_RPG_${{ matrix.bits }}_${{ matrix.compiler }}
      GNUTARGET: default

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Setup Release Version
      run: |
        echo "RELEASE_NAME=Bat_Cat_Studios-Wasabi_Warriors_RPG_${{ github.event.release.tag_name }}" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Setup Environment
      run: | 
        dir
        mkdir build
        cd build
        mkdir ${{ env.RELEASE_NAME }}
        cd ../../../Wasabi-Warriors-RPG
    # Setup MSBuild.exe path if required
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      if: matrix.compiler == 'msvc16'

    - name: Build Library (MSVC16)
      run: |
        cd Game
        msbuild.exe Development.sln /target:wasabi-warriors /property:Configuration=Release /property:Platform=${{ matrix.ARCH }}
        cd ../..
      shell: cmd
      if: matrix.compiler == 'msvc16'

    - name: Generate Artifacts
      run: |
        copy /Y .\Build\Release\Game.exe .\build\${{ env.RELEASE_NAME }}\Game.exe
        copy /Y .\README.md .\build\${{ env.RELEASE_NAME }}\README.md
        copy /Y .\LICENSE .\build\${{ env.RELEASE_NAME }}\LICENSE
        cd build
        7z a ./${{ env.RELEASE_NAME }}.zip ./Bat_Cat_Studios-Wasabi_Warriors_RPG_${{ github.event.release.tag_name }}
        dir
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_NAME }}.zip
        path: ./build/${{ env.RELEASE_NAME }}.zip
        
